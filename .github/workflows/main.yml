name: CICD

on:
  push:
    branches: [feature/CICD_AWS, main]
  pull_request:
    branches: [main]

jobs:
  CICD:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ./server/package-lock.json
      
      # Backend environment variables
      - name: Create backend .env file
        run: |
          echo "PASSWORD=${{ secrets.PASSWORD }}" > backend/.env
          echo "USERNAME=${{ secrets.USERNAME }}" >> backend/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> backend/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> backend/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> backend/.env

      - run: cd server && npm ci
      - run: cd server && npm run test

      # Frontend build and test
      - run: cd client && npm ci
      - run: cd client && npm run build --if-present
      - run: cd client && npm test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t luchen2001/180toolkit:latest .
          docker push luchen2001/180toolkit:latest
